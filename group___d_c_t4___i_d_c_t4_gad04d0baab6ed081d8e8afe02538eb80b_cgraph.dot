digraph "arm_dct4_q31"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node14 [label="arm_dct4_q31",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="arm_mult_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___basic_mult.html#ga3528c0f54a0607acc603f0490d3ca6c6",tooltip="Q31 vector multiplication. "];
  Node14 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="arm_shift_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group__shift.html#ga387dd8b7b87377378280978f16cdb13d",tooltip="Shifts the elements of a Q31 vector a specified number of bits. "];
  Node14 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="arm_rfft_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___real_f_f_t.html#gabaeab5646aeea9844e6d42ca8c73fe3a",tooltip="Processing function for the Q31 RFFT/RIFFT. "];
  Node17 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="arm_split_rifft_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__rfft__q31_8c.html#acc62dd39a59091c4d6a80d4e55adeb13",tooltip="Core Real IFFT process. "];
  Node17 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="arm_cfft_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___complex_f_f_t.html#ga5a0008bd997ab6e2e299ef2fb272fb4b",tooltip="Processing function for the fixed-point complex FFT in Q31 format. "];
  Node19 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="arm_radix4_butterfly\l_inverse_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__cfft__q31_8c.html#ac9c7c553114c1201a3a987a11b8a6d01",tooltip="Core function for the Q31 CIFFT butterfly process. "];
  Node19 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="arm_cfft_radix4by2\l_inverse_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__cfft__q31_8c.html#a3f3ae10bc2057cc1360abfa25f224c8c"];
  Node21 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="arm_radix4_butterfly_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__cfft__q31_8c.html#ac12f1e7f159d5741358cdc36830a0395",tooltip="end of ComplexFFT group "];
  Node19 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="arm_cfft_radix4by2_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__cfft__q31_8c.html#af6df8bf714c30d44e6b871ea87d22b30",tooltip="end of ComplexFFT group "];
  Node23 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="arm_bitreversal_32",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__cfft__q31_8c.html#ac8e7ebe1cb131a5b0f55d0464640591f"];
  Node17 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="arm_split_rfft_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$arm__rfft__q31_8c.html#a520e1c358d44fcd2724cb19d46eb5dfa",tooltip="end of RealFFT group "];
  Node14 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="arm_cmplx_mult_cmplx_q31",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$group___cmplx_by_cmplx_mult.html#ga1829e50993a90742de225a0ce4213838",tooltip="Q31 complex-by-complex multiplication. "];
}
